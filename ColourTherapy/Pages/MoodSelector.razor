@page "/mood-selector"
@using ColourTherapy.Models
@using ColourTherapy.Services
@using ColourTherapy
@inject TherapyService TherapyService
@inject NavigationManager NavigationManager
@inject AppSettings Settings
@inject TranslationService TranslationService
@inject TranslationService TranslationService

<h2 class="text-center mb-4">@TranslationService.GetTranslation("moodSelectorTitle")</h2>
<p class="text-center subtitle">@TranslationService.GetTranslation("moodSelectorSubtitle")</p>

@if (moods == null)
{
    <div class="loading-spinner"></div>
}
else
{    <div class="mood-grid">
        @foreach (var mood in moods)
        {
            <div class="card mood-card @(selectedMood?.Id == mood.Id ? "selected" : "")"
                 @onclick="() => SelectMood(mood)">
                <h3>@mood.GetLocalizedName(TranslationService.CurrentLanguage)</h3>
                <p>@mood.GetLocalizedDescription(TranslationService.CurrentLanguage)</p>
            </div>
        }
    </div>    @if (selectedMood != null)
    {
        <div class="text-center mt-4">
            <button class="btn" @onclick="ProceedToColours">@TranslationService.GetTranslation("moodSelectorButton")</button>
        </div>
    }
}

<style>
    .subtitle {
        color: #777;
        margin-bottom: 2rem;
    }

    .mood-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 20px;
        margin: 2rem 0;
    }

    .mb-4 {
        margin-bottom: 2rem;
    }

    .mt-4 {
        margin-top: 2rem;
    }

    .text-center {
        text-align: center;
    }
</style>

@code {
    private List<Mood>? moods;
    private Mood? selectedMood;    protected override async Task OnInitializedAsync()
    {
        await TranslationService.InitializeAsync();
        moods = await TherapyService.GetMoodsAsync();
    }

    private void SelectMood(Mood mood)
    {
        selectedMood = mood;
    }    private void ProceedToColours()
    {
        if (selectedMood != null)
        {
            NavigationManager.NavigateTo($"{Settings.BasePath}/colour-suggestions/{selectedMood.Id}");
        }
    }
}
